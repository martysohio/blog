<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on Marty S Ramblings</title>
    <link>https://martysohio.com/tags/tech/</link>
    <description>Recent content in Tech on Marty S Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://martysohio.com/tags/tech/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Py Metis HTTP Monitor</title>
      <link>https://martysohio.com/2019/11/py-metis-http-monitor/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://martysohio.com/2019/11/py-metis-http-monitor/</guid>
      <description>Making your own HTTP monitor without breaking the bank can be difficult if you need to scale your monitoring up to thousands of URLs. In most cases, you want to hit some URL every 5 minutes, sometimes every minute. If you have a long list of URLs, then you run into a few constraints:
 The scan of the URLs has to complete before the next run - monitoring every 5 minutes means your ping and processing has to take less than 5 minutes Jobs can&amp;rsquo;t overrun or you risk spamming your list with HTTP hits Processing the results into useful alerts can also constrain you, but there are multiple ways to approach alerting depending on your needs  I&amp;rsquo;ve seen implementations in Go that make it easier or some other language geared towards concurrency.</description>
    </item>
    
    <item>
      <title>Py Pong Starter</title>
      <link>https://martysohio.com/2019/10/py-pong-starter/</link>
      <pubDate>Thu, 31 Oct 2019 13:50:46 +0200</pubDate>
      
      <guid>https://martysohio.com/2019/10/py-pong-starter/</guid>
      <description>I&amp;rsquo;ve been messing around with PyGame and its certainly a trip. Game logic is much easier than the mechanics of drawing something in the proper order and the proper way. It took way longer than I expected to get a basic version of Pong functional. Needs some final tweaks to beat the 80&amp;frasl;20 rule and have something that is truly complete. I keep redoing it as I find something else out about PyGame and game logic in general.</description>
    </item>
    
  </channel>
</rss>